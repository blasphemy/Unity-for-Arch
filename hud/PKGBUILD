# Maintainer: Xiao-Long Chen <chenxiaolong@cxl.epac.to>

pkgname=hud
_actual_ver=13.10.1
_extra_ver=daily13.06.05.1
pkgver=${_actual_ver}${_extra_ver}
pkgrel=100
pkgdesc="Backend for the Unity HUD"
arch=('i686' 'x86_64')
url="https://launchpad.net/hud"
license=('GPL')
groups=('unity')
depends=('bamf' 'dee' 'libdbusmenu-gtk3' 'sqlite')
# Speech recognition
depends+=('pocketsphinx' 'sphinx-voxforge-en' 'sphinxbase' 'pulseaudio')
makedepends=('cmake' 'gnome-common' 'gnome-doc-utils' 'gobject-introspection' 'gtk-doc' 'intltool' 'python2-distribute' 'vala')
checkdepends=('dbus-test-runner' 'xorg-server-xvfb')
optdepends=('indicator-appmenu: HUD support')
install=hud.install
source=("https://launchpad.net/ubuntu/+archive/primary/+files/hud_${_actual_ver}${_extra_ver}.orig.tar.gz")
sha512sums=('111251dd0b1f6f02f9a53c5dc0696e3d1358ae361e1bdb766ac5871b29958d45eb278e3fdf4e95dc4d274c62834a161ad2f1a3a28f6d8e8b523ac75834dd901c')

build() {
  cd "${srcdir}/${pkgname}-${_actual_ver}${_extra_ver}"

  mkdir build && cd build
  cmake .. \
    -DCMAKE_INSTALL_PREFIX=/usr \
    -DCMAKE_INSTALL_LIBDIR=/usr/lib \
    -DCMAKE_INSTALL_LIBEXECDIR=/usr/lib \
    -DENABLE_DOCUMENTATION=ON \
    -DENABLE_TESTS=ON \
    -DENABLE_VOICE_TESTS=ON `# Off on Ubuntu` \
    -DENABLE_SCALABILITY_TESTS=ON \
    -DFULL_WARNINGS=ON

  make
}

check() {
  # Will fix tests later
  return 0

  cd "${srcdir}/${pkgname}-${_actual_ver}${_extra_ver}/build"

  # Tests require gtester2xunit, dbus-test-runner, and bustle

  local EXTRAPATH="${srcdir}/bin"
  local EXTRALIBS=""

  rm -rf "${srcdir}/bin/"
  mkdir "${srcdir}/bin/"
  pushd "${srcdir}/bin/"

  # gtester2xunit
  wget 'https://bazaar.launchpad.net/~autopilot/gtester2xunit/trunk/download/head:/gtester2xunit-20121028102712-vb10md6zm7ydek6w-2/gtester2xunit'
  wget 'https://bazaar.launchpad.net/~autopilot/gtester2xunit/trunk/download/head:/gtester.xsl-20121028102712-vb10md6zm7ydek6w-3/gtester.xsl'
  chmod +x gtester2xunit
  sed -i -e 's|^\(#!.*python$\)|\12|g' \
         -e "s|/usr/share/gtester2xunit/gtester.xsl|$(pwd)/gtester.xsl|g" \
      gtester2xunit

  # bustle
  case ${CARCH} in
  i*86) BUSTLE_ARCH=i486     ;;
  *)    BUSTLE_ARCH=${CARCH} ;;
  esac

  wget "http://willthompson.co.uk/bustle/releases/0.4.1/bustle-0.4.1-${BUSTLE_ARCH}.tar.bz2"
  tar jxvf bustle-0.4.1-${BUSTLE_ARCH}.tar.bz2
  EXTRAPATH+=":$(pwd)/bustle-0.4.1-${BUSTLE_ARCH}/bin"
  EXTRALIBS+=":$(pwd)/bustle-0.4.1-${BUSTLE_ARCH}/lib"

  popd

  LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${EXTRALIBS}" \
    PATH="${PATH}:${EXTRAPATH}" \
    ctest
}

package() {
  cd "${srcdir}/${pkgname}-${_actual_ver}${_extra_ver}/build"
  make DESTDIR="${pkgdir}/" install
}

# vim:set ts=2 sw=2 et:
